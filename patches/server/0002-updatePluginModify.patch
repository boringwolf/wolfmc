From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: boringwolf <boringwolf@leandev.io>
Date: Wed, 8 May 2024 12:38:22 +0800
Subject: [PATCH] updatePluginModify


diff --git a/src/main/java/io/papermc/paper/plugin/provider/source/FileProviderSource.java b/src/main/java/io/papermc/paper/plugin/provider/source/FileProviderSource.java
index 6b8ed8a0baaf4a57d20e57cec3400af5561ddd79..d5e35dcf53dfe277aa2f35959b7c802b91a62831 100644
--- a/src/main/java/io/papermc/paper/plugin/provider/source/FileProviderSource.java
+++ b/src/main/java/io/papermc/paper/plugin/provider/source/FileProviderSource.java
@@ -1,10 +1,12 @@
 package io.papermc.paper.plugin.provider.source;
 
+import com.mojang.logging.LogUtils;
 import io.papermc.paper.plugin.PluginInitializerManager;
 import io.papermc.paper.plugin.entrypoint.EntrypointHandler;
 import io.papermc.paper.plugin.provider.type.PluginFileType;
 import org.bukkit.plugin.InvalidPluginException;
 import org.jetbrains.annotations.Nullable;
+import org.slf4j.Logger;
 
 import java.io.File;
 import java.io.IOException;
@@ -25,6 +27,7 @@ public class FileProviderSource implements ProviderSource<Path, Path> {
 
     private final Function<Path, String> contextChecker;
     private final boolean applyRemap;
+    private static final Logger LOGGER = LogUtils.getClassLogger();
 
     public FileProviderSource(Function<Path, String> contextChecker, boolean applyRemap) {
         this.contextChecker = contextChecker;
@@ -99,7 +102,8 @@ public class FileProviderSource implements ProviderSource<Path, Path> {
 
         try {
             String pluginName = this.getPluginName(file);
-            UpdateFileVisitor visitor = new UpdateFileVisitor(pluginName);
+            String pluginVersion = this.getPluginVersion(file);
+            UpdateFileVisitor visitor = new UpdateFileVisitor(pluginName, pluginVersion);
             Files.walkFileTree(updateDirectory, Set.of(), 1, visitor);
             if (visitor.getValidPlugin() != null) {
                 Path updateLocation = visitor.getValidPlugin();
@@ -113,7 +117,7 @@ public class FileProviderSource implements ProviderSource<Path, Path> {
                 // Idk what this is about, TODO
                 File newName = new File(file.toFile().getParentFile(), updateLocation.toFile().getName());
                 file.toFile().renameTo(newName);
-                updateLocation.toFile().delete();
+                LOGGER.info("Updated plugin {} to version {}", pluginName, pluginVersion);
                 return newName.toPath();
             }
         } catch (Exception e) {
@@ -133,14 +137,27 @@ public class FileProviderSource implements ProviderSource<Path, Path> {
         }
     }
 
+    private String getPluginVersion(Path path) throws Exception {
+        try (JarFile file = new JarFile(path.toFile())) {
+            PluginFileType<?, ?> type = PluginFileType.guessType(file);
+            if (type == null) {
+                throw new IllegalArgumentException(path + " does not contain a " + String.join(" or ", PluginFileType.getConfigTypes()) + "! Could not determine plugin type, cannot load a plugin from it!");
+            }
+
+            return type.getConfig(file).getVersion();
+        }
+    }
+
     private class UpdateFileVisitor implements FileVisitor<Path> {
 
         private final String targetName;
+        private final String targetVersion;
         @Nullable
         private Path validPlugin;
 
-        private UpdateFileVisitor(String targetName) {
+        private UpdateFileVisitor(String targetName, String targetVersion) {
             this.targetName = targetName;
+            this.targetVersion = targetVersion;
         }
 
         @Override
@@ -152,7 +169,8 @@ public class FileProviderSource implements ProviderSource<Path, Path> {
         public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException {
             try {
                 String updatePluginName = FileProviderSource.this.getPluginName(file);
-                if (this.targetName.equals(updatePluginName)) {
+                String updatePluginVersion = FileProviderSource.this.getPluginVersion(file);
+                if (this.targetName.equals(updatePluginName) && !this.targetVersion.equals(updatePluginVersion)) {
                     this.validPlugin = file;
                     return FileVisitResult.TERMINATE;
                 }
